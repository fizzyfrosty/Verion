Random Notes

- Submission View 
	- Displaying kinds of content
		- Image/Gif
		- Video
		- Link
		- Text Post
		- 

- Comments View Controller
	* Create cells
	- Autolayout
		* Submission
		* Comment
		* Load More
		* hW
		* wR hC
	- SubmissionCellViewModel
		- SubmissionTitleCellViewModel
		- SubmissionTextCellViewModel
		- SubmissionImageCellViewModel
		- SubmissionLinkCellViewModel
		- CommentSortByCellViewModel
		
	- CommentCellViewModel

	- Comment Data Model

	- Load data
		- Submission info
		- Comments
		- Nested comments?

- Sort Submissions by
	- Hot (by rating)
	- Top (by vote count)
	- New (by date)

* Refresh control
	* Pull down to refresh
	* Release to refresh
	* Refreshing (animation?)
	* Both orientations

* Load More when hit bottom
	* Load more when hit bottom
	* Load a cell for tapping Load More
		* Create the cell
		* Load the cell if the index is last element
		* Put increaseNumber() in the row selected callback
	* Put the event into a button 
	* Don't give option to load more at end
	* Only bind cells that are being displayed
	* Attach binding of cells to when being displayed more

* Refresh Control

* Calculate minimum height
	* In viewModel, if no image, minimum height is less
	* Move height calculation to viewModel

* When thumbnail doesn't exist, self post
	* When cell is binding to viewModel, identify that thumbnail image doesn't exist
	* Make width 0


* Populate UIImage with thumbnail
	* Populate the thumbnail link when binding model->viewModel
	* viewModel needs a UIImage, create when initializing
	* When loading cell, set the image
	* Handle when thumbnail link is shorthand for residing on Voat severs
	* Load cells/images in background thread

* Correctly store time
	* Convert string to NSDate

* Load dataModel with sample JSON data

* Correctly Resizing the Subverse's Submission Cell

DataProvider implementation and usage


* When controller is initializing the cells, the dataprovider provides the viewModels in order
	* Controller supplies the viewModel instance
	* dataProvider binds viewModel to dataModel
	* Then the cell gets initialized and binds to the viewModel


* Controller is initialized with a dataProvider via injection
* When does dataModel make its request?
	* on Controller loading
* Controller loads with loading message cell
	* dataProvider makes request
	* returns array of dataModels, or error
	* Controller supplies viewModels, dataProvider binds to dataModels
	* Reloads table data

* Table reload
	* Gets viewModels
	* creates cells
	* etc.


Eureka! An MVVM - model, view, view-model. 
- A view-model is the data layer right under the view!
- It can hold persistent data for the view, as well as owning the model
	- The view-model is updated by the model, or by a data-supply layer inbetween
	- The Controller then updates the view according to the view-model


My app's architecture:
---------------------
Accepting Data and populating UI
- ViewController talks to a DataSupplier, and is given a view-model
	- the view-model determines what views to create (kinds of cells)
	- Once created, the view accepts the view-model as input and binds to it
- Even on load, ViewController creates view-model
	- i.e. refresh control view-model
	- then feeds view-model to the view (the actual refresh control)
	- it is responsible for activating view through interfacing with the view-model

User Input, communicating with the DataSupplier
- Touching the view triggers UI and view-model changes
- Do view-model changes automatically trigger data supplier?
	- So on creation, DataSupplier binds view-model to model?
	- When view-model changes, activates 
		- 1) local data model, or
		- 2) DataSupplier data request
	- Does this happen automatically? Yes, it should.

DataSupplier triggering UI
- When the DataSupplier retrieves data, it sets view-model properties
	- On set, can use bindings to trigger properties to show UI changes	


- Voat has limited upvotes depending on your account life
- May want to contact server on startup to see if a message should be displayed
- Think about monetization...





Design.io
https://designcode.io/swiftapp

Content Generator for Sketch
https://github.com/timuric/Content-generator-sketch-plugin

Animation library
https://github.com/MengTo/Spring



Problem: How to display comments from markdown source?
Convert markdown to NSAttributedString: https://github.com/laptobbe/TSMarkdownParser



Problem: How to minimize/maximize comments?
* minimize all root comments
	* minimize first child comment
	- minimize second child comments
	- minimize all comments
- Construct tree to match comment data structures


Making Status Bar white:
- set the Status Bar Style: Light in the main settings
- in Info.plist, set View controller-based status bar appearance: No




List of things to complete for Subverse View Controller

- navigation bar label





Features List

Main features required to publish:
- Welcome Screen
- Display Submissions of a Subverse
- Show Subverse submission content
- Show Comments
- Find Subverse

Features to add:
- Login
- Comment
- Upvote/downvote
- Messages
	- View
	- Reply


Not Logged In

- Get main Submissions
	- show rating
	- upvote, downvote
	- 
- Sort by
- Show page dividers
- Find subverses

- Retrieve and show single threads
	- Comments
	- Videos
	- Images
- Show Comments
	- staggered
	- OP vs users

- Collapse comments
- Uncollapse comments


User Accounts

- Login
- Logout

- Upvote/downvote main submissions

- Upvote/downvote comments	
- Make a post
- Comment on posts

- Read Messages
- Respond to Messages







